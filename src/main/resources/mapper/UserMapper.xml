<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myStudy.dao.IUserDao">
	<sql id="Base_Column_List">
		ID, USER_NAME, PASSWORD, NICKNAME, REAL_NAME, PHONE, EMAIL, STATUS,
		REMARK, CREATOR, CREATE_TIME, UPDATE_PERSON, UPDATE_TIME, VERSION,
		IF(STATUS=1,'有效','无效') AS STATUS_DES
	</sql>
	<sql id="Base_Table">T_USER</sql>
	
	<resultMap type="org.myStudy.entity.User" id="UserWithRoles">
        <id column="ID" property="id" />
        <result column="USER_NAME" property="userName" />
        <result column="PASSWORD" property="password" />
        <result column="NICKNAME" property="nickname" />
        <result column="REAL_NAME" property="realName" />
        <result column="PHONE" property="phone" />
        <result column="EMAIL" property="email" />
        <result column="STATUS" property="status" />
        <result column="REMARK" property="remark" />
        <result column="CREATOR" property="creator" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="UPDATE_PERSON" property="updatePerson" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="VERSION" property="version" />
        <collection property="roles" ofType="org.myStudy.entity.Role">
            <id column="ROLE_ID" property="id" />
            <result column="ROLE_NAME" property="name" />
            <result column="ROLE_STATUS" property="status" />
            <result column="ROLE_REMARK" property="remark" />
            <result column="ROLE_CREATOR" property="creator" />
            <result column="ROLE_CREATE_TIME" property="createTime" />
            <result column="ROLE_UPDATE_PERSON" property="updatePerson" />
            <result column="ROLE_UPDATE_TIME" property="updateTime" />
            <result column="ROLE_VERSION" property="version" />
        </collection>
    </resultMap>

	<select id="getById" parameterType="Integer" resultType="org.myStudy.entity.User">
        select <include refid="Base_Column_List" />
    	from <include refid="Base_Table" />
		where ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="getByIdWithRoles" parameterType="Integer" resultMap="UserWithRoles">
        select t.ID, t.USER_NAME, t.PASSWORD, t.NICKNAME, t.REAL_NAME, t.PHONE, t.EMAIL, t.STATUS, t.REMARK,
			t.CREATOR, t.CREATE_TIME, t.UPDATE_PERSON, t.UPDATE_TIME, t.VERSION, IF(t.STATUS=1,'有效','无效') AS STATUS_DES,
			role.ID as ROLE_ID, role.NAME as ROLE_NAME, role.STATUS as ROLE_STATUS, role.REMARK as ROLE_REMARK,
			role.CREATOR as ROLE_CREATOR, role.CREATE_TIME as ROLE_CREATE_TIME, role.UPDATE_PERSON as ROLE_UPDATE_PERSON,
			role.UPDATE_TIME as ROLE_UPDATE_TIME, role.VERSION as ROLE_VERSION
    	from <include refid="Base_Table" /> t
    	left join T_REL_USER_ROLE rel on rel.USER_ID = t.id
    	left join T_ROLE role on role.ID = rel.ROLE_ID
		where t.ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="getAll" resultType="org.myStudy.entity.User">
        select <include refid="Base_Column_List" />
    	from <include refid="Base_Table" />
	</select>
	
	<!-- 获取集合 -->
	<select id="getList" parameterType="org.myStudy.dto.Query" resultType="org.myStudy.entity.User">
        select <include refid="Base_Column_List" />
    	from <include refid="Base_Table" />
		<include refid="org.myStudy.dao.BaseMapper.Query_Filter" />
<!-- 		<include refid="org.myStudy.dao.BaseMapper.Sort" /> -->
<!-- 		<include refid="org.myStudy.dao.BaseMapper.Pagination" /> -->
	</select>
	
	<!-- 获取分页查询结果的总数 -->
	<select id="getListTotal" parameterType="org.myStudy.dto.Query" resultType="int">
        select count(1)
    	from <include refid="Base_Table" />
		<include refid="org.myStudy.dao.BaseMapper.Query_Filter" />
	</select>
	
	<delete id="deleteById" parameterType="int">
		delete from <include refid="Base_Table" />
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="add" parameterType="org.myStudy.entity.User" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="Base_Table" />
			(USER_NAME, PASSWORD, NICKNAME, REAL_NAME, PHONE, EMAIL, STATUS, REMARK,
			CREATOR, CREATE_TIME, UPDATE_PERSON, UPDATE_TIME, VERSION)
		values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
			#{nickname,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR},
			#{creator,jdbcType=INTEGER}, now(), #{updatePerson,jdbcType=INTEGER}, now(), 0)
	</insert>
	
	<update id="edit" parameterType="org.myStudy.entity.User">
		update <include refid="Base_Table" />
		set USER_NAME = #{userName,jdbcType=VARCHAR},
			PASSWORD = #{password,jdbcType=VARCHAR},
			NICKNAME = #{nickname,jdbcType=VARCHAR},
			REAL_NAME = #{realName,jdbcType=VARCHAR},
			PHONE = #{phone,jdbcType=VARCHAR},
			EMAIL = #{email,jdbcType=VARCHAR},
			STATUS = #{status,jdbcType=TINYINT},
			REMARK = #{remark,jdbcType=VARCHAR},
			UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},
			UPDATE_TIME = now(),
			VERSION = VERSION + 1
		where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="editSelective" parameterType="org.myStudy.entity.User">
		update <include refid="Base_Table" />
		<set>
			<if test="userName != null">USER_NAME = #{userName,jdbcType=VARCHAR},</if>
			<if test="password != null">PASSWORD = #{password,jdbcType=VARCHAR},</if>
			<if test="nickname != null">NICKNAME = #{nickname,jdbcType=VARCHAR},</if>
			<if test="realName != null">REAL_NAME = #{realName,jdbcType=VARCHAR},</if>
			<if test="phone != null">PHONE = #{phone,jdbcType=VARCHAR},</if>
			<if test="email != null">EMAIL = #{email,jdbcType=VARCHAR},</if>
			<if test="status != null">STATUS = #{status,jdbcType=TINYINT},</if>
			<if test="remark != null">REMARK = #{remark,jdbcType=VARCHAR},</if>
			UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},
			UPDATE_TIME = now(),
			VERSION = VERSION + 1,
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>