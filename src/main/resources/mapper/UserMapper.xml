<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myStudy.dao.IUserDao">
	<sql id="Base_Column_List">
		ID, USER_NAME, PASSWORD, NICKNAME, REAL_NAME, PHONE, EMAIL, STATUS,
		REMARK, CREATOR, CREATE_TIME, UPDATE_PERSON, UPDATE_TIME, VERSION
	</sql>

	<select id="selectById" parameterType="Integer" resultType="org.myStudy.entity.User">
		select
		<include refid="Base_Column_List" />
		from t_user
		where ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectAll" resultType="org.myStudy.entity.User">
		select
		<include refid="Base_Column_List" />
		from t_user
	</select>
	
	<!-- 获取分页列表 -->
	<select id="selectPageList" parameterType="org.myStudy.dto.PageQuery" resultType="org.myStudy.entity.User">  
        select 
		<include refid="Base_Column_List" />
    	from t_user t 
        <where>
        	<if test="search != null and !search.trim().equals('')">
        		(t.user_name like CONCAT('%', #{search}, '%') or
        		 t.nickname like CONCAT('%', #{search}, '%') or
        		 t.real_name like CONCAT('%', #{search}, '%'))
        	</if>
        </where>
        <if test="sort != null and !sort.equals('')">
        	order by ${sort} ${order}
        </if>
        limit ${offset},${limit}
	</select>
	
	<!-- 获取分页查询结果的总数 -->
	<select id="selectPageListTotal" parameterType="org.myStudy.dto.PageQuery" resultType="int">
		select count(1) from t_user t
        <where>
        	<if test="search != null and !search.trim().equals('')">
        		(t.user_name like CONCAT('%', #{search}, '%') or
        		 t.nickname like CONCAT('%', #{search}, '%') or
        		 t.real_name like CONCAT('%', #{search}, '%'))
        	</if>
        </where>
	</select>
	
	<delete id="deleteById" parameterType="int">
		delete from t_user
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="org.myStudy.entity.User" useGeneratedKeys="true" keyProperty="id">
		insert into t_user (USER_NAME, PASSWORD, NICKNAME, REAL_NAME, PHONE, EMAIL, STATUS, REMARK,
			CREATOR, CREATE_TIME, UPDATE_PERSON, UPDATE_TIME, VERSION)
		values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
			#{nickname,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR},
			#{creator,jdbcType=INTEGER}, now(), #{updatePerson,jdbcType=INTEGER}, now(), 0)
	</insert>
	
	<insert id="insertSelective" parameterType="org.myStudy.entity.User" useGeneratedKeys="true" keyProperty="id">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID,
			<if test="userName != null">USER_NAME,</if>
			<if test="password != null">PASSWORD,</if>
			<if test="nickname != null">NICKNAME,</if>
			<if test="realName != null">REAL_NAME,</if>
			<if test="phone != null">PHONE,</if>
			<if test="email != null">EMAIL,</if>
			STATUS,
			<if test="remark != null">REMARK,</if>
			CREATOR,
			CREATE_TIME,
			UPDATE_PERSON,
			UPDATE_TIME,
			VERSION,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=INTEGER},
			<if test="userName != null">#{userName,jdbcType=VARCHAR},</if>
			<if test="password != null">#{password,jdbcType=VARCHAR},</if>
			<if test="nickname != null">#{nickname,jdbcType=VARCHAR},</if>
			<if test="realName != null">#{realName,jdbcType=VARCHAR},</if>
			<if test="phone != null">#{phone,jdbcType=VARCHAR},</if>
			<if test="email != null">#{email,jdbcType=VARCHAR},</if>
			#{status,jdbcType=TINYINT},
			<if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
			#{creator,jdbcType=INTEGER},
			now(),
			#{updatePerson,jdbcType=INTEGER},
			now(),
			0,
		</trim>
	</insert>
	
	<update id="update" parameterType="org.myStudy.entity.User">
		update t_user
		set USER_NAME = #{userName,jdbcType=VARCHAR},
			PASSWORD = #{password,jdbcType=VARCHAR},
			NICKNAME = #{nickname,jdbcType=VARCHAR},
			REAL_NAME = #{realName,jdbcType=VARCHAR},
			PHONE = #{phone,jdbcType=VARCHAR},
			EMAIL = #{email,jdbcType=VARCHAR},
			STATUS = #{status,jdbcType=TINYINT},
			REMARK = #{remark,jdbcType=VARCHAR},
			UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},
			UPDATE_TIME = now(),
			VERSION = VERSION + 1
			where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateSelective" parameterType="org.myStudy.entity.User">
		update t_user
		<set>
			<if test="userName != null">USER_NAME = #{userName,jdbcType=VARCHAR},</if>
			<if test="password != null">PASSWORD = #{password,jdbcType=VARCHAR},</if>
			<if test="nickname != null">NICKNAME = #{nickname,jdbcType=VARCHAR},</if>
			<if test="realName != null">REAL_NAME = #{realName,jdbcType=VARCHAR},</if>
			<if test="phone != null">PHONE = #{phone,jdbcType=VARCHAR},</if>
			<if test="email != null">EMAIL = #{email,jdbcType=VARCHAR},</if>
			<if test="status != null">STATUS = #{status,jdbcType=TINYINT},</if>
			<if test="remark != null">REMARK = #{remark,jdbcType=VARCHAR},</if>
			<if test="updatePerson != null">UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},</if>
			UPDATE_TIME = now(),
			VERSION = VERSION + 1,
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>