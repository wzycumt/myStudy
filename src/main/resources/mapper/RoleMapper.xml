<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myStudy.dao.IRoleDao">
	<sql id="Base_Column_List">
		ID, NAME, STATUS, REMARK, CREATOR, CREATE_TIME, UPDATE_PERSON,
		UPDATE_TIME, VERSION
	</sql>

	<select id="selectId" parameterType="Integer" resultType="org.myStudy.entity.Role">
		select
		<include refid="Base_Column_List" />
		from t_role
		where ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectAll" resultType="org.myStudy.entity.Role">
		select
		<include refid="Base_Column_List" />
		from t_role
	</select>
	
	<!-- 获取分页列表 -->
	<select id="selectPageList" parameterType="org.myStudy.dto.PageQuery" resultType="org.myStudy.entity.Role">  
        select 
		<include refid="Base_Column_List" />
    	from t_role t 
        <where>
        	<if test="search != null and !search.trim().equals('')">
        		(t.NAME like CONCAT('%', #{search}, '%'))
        	</if>
        </where>
        <if test="sort != null and !sort.equals('')">
        	order by ${sort} ${order}
        </if>
        limit ${offset},${limit}
	</select>
	
	<!-- 获取分页查询结果的总数 -->
	<select id="selectPageListTotal" parameterType="org.myStudy.dto.PageQuery" resultType="int">
		select count(1) from t_role t
        <where>
        	<if test="search != null and !search.trim().equals('')">
        		(t.NAME like CONCAT('%', #{search}, '%'))
        	</if>
        </where>
	</select>

	<delete id="deleteById" parameterType="int">
		delete from t_role
		where ID = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="org.myStudy.entity.Role" useGeneratedKeys="true" keyProperty="id">
		insert into t_role (NAME, STATUS, REMARK, CREATOR, CREATE_TIME, UPDATE_PERSON, UPDATE_TIME, VERSION)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
			#{remark,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
			#{updatePerson,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=SMALLINT})
	</insert>
	
	<insert id="insertSelective" parameterType="org.myStudy.entity.Role">
		insert into t_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID,
			<if test="name != null">
				NAME,
			</if>
			STATUS,
			<if test="remark != null">
				REMARK,
			</if>
			CREATOR,
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			UPDATE_PERSON,
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			VERSION,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=INTEGER},
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			#{status,jdbcType=TINYINT},
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			#{creator,jdbcType=INTEGER},
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			#{updatePerson,jdbcType=INTEGER},
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			#{version,jdbcType=SMALLINT},
		</trim>
	</insert>
	
	<update id="update" parameterType="org.myStudy.entity.Role">
		update t_role
		set NAME = #{name,jdbcType=VARCHAR},
		STATUS = #{status,jdbcType=TINYINT},
		REMARK = #{remark,jdbcType=VARCHAR},
		CREATOR = #{creator,jdbcType=INTEGER},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
		VERSION = #{version,jdbcType=SMALLINT}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateSelective" parameterType="org.myStudy.entity.Role">
		update t_role
		<set>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=TINYINT},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				CREATOR = #{creator,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePerson != null">
				UPDATE_PERSON = #{updatePerson,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="version != null">
				VERSION = #{version,jdbcType=SMALLINT},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>